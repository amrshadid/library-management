{"version":3,"file":"static/webpack/static\\development\\pages\\layouts\\profile.js.729359168b7f68350e11.hot-update.js","sources":["webpack:///./pages/layouts/profile.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\nimport Head from \"next/head\";\n// import Custom Components\nimport Header from \"../../containers/common/header\";\nimport FooterSection from \"./sections/agency/footer\";\nimport Subscribed from \"./sections/agency/subscribed\";\nimport UsersTable from \"./sections/index/usersTable\";\nimport Slider from \"react-slick\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Link from \"next/link\";\nimport Router, { useRouter } from \"next/router\";\nimport Pricing from \"./sections/agency/pricing\";\nimport baseApiURL from \"../../constant/api\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport Update from '../../utils/update'\n\nconst ProfileScreen = () => {\n\n  const router = useRouter();\n  if (router.query.reauth === \"1\" && router.query.token) {\n    const token = router.query.token;\n    localStorage.setItem(\"hoarTemplatetoken\", token);\n\n    let URL = baseApiURL + \"userDetails/\" + token;\n    axios({\n      method: \"get\",\n      url: URL,\n      headers: {\n        Authorization: \"Token \" + token,\n      },\n    })\n      .then(function (response) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\n        toast.success(\"Registration Successfull, Welcome!\");\n        if (JSON.parse(localStorage.getItem(\"userInfo\")).plan === \"\") {\n          Router.push(\"/layouts/pricing\");\n          return;\n        }\n\n        setUserTable(<UsersTable />);\n      })\n      .catch(function (error) {\n        console.log(error);\n        toast.error(\"Some Error Occured\");\n      });\n  }\n\n  const [userTable, setUserTable] = useState([]);\n  const getUserTable = () => {\n    if (localStorage.getItem(\"userInfo\")) {\n      if (JSON.parse(localStorage.getItem(\"userInfo\")).plan == \"\") {\n        setUserTable([]);\n      } else {\n        setUserTable(<UsersTable />);\n      }\n    } else {\n      setUserTable([]);\n    }\n  };\n  useEffect(async() => {\n    // getUserTable;\n    function checkUserData() {\n      const item = JSON.parse(localStorage.getItem(\"userInfo\"))\n  \n      if (item) {\n        setUserTable(item)\n      }\n      else{\n        setUserTable(<UsersTable />);\n      }\n    }\n  \n    window.addEventListener('storage', checkUserData)\n\n    return () => {\n      window.removeEventListener('storage', checkUserData)\n\n    }\n\n  }, []);\n  return (\n    <div className=\"theme-color\">\n      <Head>\n        <title>Library Management </title>\n        <meta name=\"Category Layout\" content=\"\" />\n      </Head>\n      <Header className=\"agency\" />\n      <Subscribed />\n      {userTable}\n      <Pricing />\n\n      <FooterSection />\n    </div>\n  );\n};\n\nexport default ProfileScreen;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AAEA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}