{"version":3,"file":"static/webpack/static\\development\\pages\\layouts\\app.js.9b92102c351a54adee33.hot-update.js","sources":["webpack:///./pages/layouts/app.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../public/assets/scss/app.css\";\nimport { CardElement, useElements, Elements,useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Router from \"next/router\";\nimport Head from \"next/head\";\n// import Custom Components\nimport Header from \"../../containers/common/header\";\nimport FooterSection from \"./sections/agency/footer\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nconst stripePromise = loadStripe(\n  \"pk_live_51Ihg5PKaeSTNPk3vvmtW6Vj8og85NTlDnywQSuuB9UP3OFMHDr4pIdOcrV8lWO6yAn9YVSr7ZYRrrtReTEcEfn4c003f9Chyxn\"\n);\nimport Slider from \"react-slick\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport baseApiURL from \"../../constant/api\";\n\nconst App = () => {\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  var planSelected = \"CU\";\n  useEffect(() => {\n    window.scrollBy(0, -1000);\n  }, []);\n  // Handle real-time validation errors from the card Element.\n  const handleChange = (event) => {\n    if (event.error) {\n      setError(event.error.message);\n    } else {\n      setError(null);\n    }\n  };\n  var elements = \"\";\n  var stripe = \"\";\n  const MyCom = () => {\n    stripe = useStripe();\n    elements = useElements();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        className=\"stripe-form\"\n        style={{ width: \"auto\" }}\n      >\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            className=\"form-input\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"jenny.rosen@example.com\"\n            required\n          />\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"card-element\">Credit or debit card</label>\n\n          <CardElement id=\"card-element\" onChange={handleChange} />\n          <div className=\"card-errors\" role=\"alert\">\n            {error}\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"Coupn Code\">Discount Coupon</label>\n          <input\n            className=\"form-input\"\n            id=\"couponCode\"\n            name=\"couponCode\"\n            type=\"text\"\n            placeholder=\"XXXXXXXXXXX\"\n          />\n        </div>\n        <div className=\"text-center\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-default primary-btn event-btn m-0-auto\"\n            value=\"Submit Payment\"\n          />\n        </div>\n      </form>\n    );\n  };\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const card = elements.getElement(CardElement);\n    const { paymentMethod, error } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: card,\n    });\n    const formData = new FormData(event.target);\n    if (localStorage.getItem(\"requestedPlan\") != null) {\n      planSelected = localStorage.getItem(\"requestedPlan\");\n    }\n    formData.append(\"payment_method_id\", paymentMethod);\n    formData.append(\"token\", localStorage.getItem(\"hoarTemplatetoken\"));\n    formData.append(\"plan\", planSelected);\n    if (error) {\n      setError(error.response.data);\n    } else {\n      axios({\n        method: \"post\",\n        url: \"https://library-mp1.herokuapp.com/payment/save_stripe_info/\",\n        data: formData,\n      })\n        .then(function (response) {\n          \n          if (response.data.status === 1) {\n            toast.success(response.data.message);\n            var x = JSON.parse(localStorage.getItem(\"userInfo\"));\n            x[\"plan\"] = localStorage.getItem(\"requestedPlan\");\n            if (localStorage.getItem(\"requestedPlan\") === \"CU\") {\n              x[\"is_aou\"] = true;\n            }\n            localStorage.setItem(\"userInfo\", JSON.stringify(x));\n            localStorage.setItem(\"requestedPlan\", \"\");\n            Router.push(\"/\");\n          } else {\n            toast.error(response.data.message);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n  const createOptions = (fontSize, padding) => {\n    return {\n      style: {\n        base: {\n          width: 100,\n        },\n      },\n    };\n  };\n  return (\n    <>\n      <Head>\n        <title>Library Management </title>\n        <meta name=\"Category Layout\" content=\"\" />\n      </Head>\n      <Header className=\"agency\" />\n      <section className=\"agency pricing price-bg\" id=\"plan\">\n        <Container>\n          <Row>\n            <Col md=\"4\">\n              <Slider className=\"owl-carousel owl-theme pricing-slider price-margin\">\n                <div className=\"item\">\n                  <div className=\"price-container shadows\">\n                    <div className=\"price-feature-container mb-3\">\n                      <div className=\"feature-text\">\n                        <h3 className=\"\">Billing Details</h3>\n                        <hr className=\"set-border\" />\n                      </div>\n                      <div className=\"price-features font-primary\">\n                        <ul>\n                          <li>\n                            <h5>\n                              Association Name :{\" \"}\n                              {typeof window !== \"undefined\"\n                                ? JSON.parse(localStorage.getItem(\"userInfo\"))\n                                    .association_name\n                                : null}\n                            </h5>\n                          </li>\n                          <br></br>\n                          <li>\n                            <h5>\n                              Email :{\" \"}\n                              {typeof window !== \"undefined\"\n                                ? JSON.parse(localStorage.getItem(\"userInfo\"))\n                                    .email\n                                : null}\n                            </h5>\n                          </li>\n                          <br></br>\n                          <li>\n                            <h5>\n                              Contact No. :{\" \"}\n                              {typeof window !== \"undefined\"\n                                ? JSON.parse(localStorage.getItem(\"userInfo\"))\n                                    .contact_no\n                                : null}\n                            </h5>\n                          </li>\n                          <br></br>\n                          <li>\n                            <h5>\n                              Requested Plan :{\" \"}\n                              {typeof window !== \"undefined\"\n                                ? localStorage.getItem(\"requestedPlan\")\n                                : null}\n                            </h5>\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"price-value\">\n                        {typeof window !== \"undefined\" ? (\n                          localStorage.getItem(\"requestedPlan\") === \"SU\" ? (\n                            <h6 className=\"price\">\n                              $<span className=\"large\">169</span>/1st Year\n                            </h6>\n                          ) : (\n                            <h6 className=\"price\">\n                              $<span className=\"large\">199</span>/1st Year\n                            </h6>\n                          )\n                        ) : null}\n                      </div>\n\n                      <button\n                        className=\"btn btn-default btn-white\"\n                        onClick={() => Router.push(\"/layouts/pricing\")}\n                      >\n                        Change Plan\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Slider>\n            </Col>\n            <Col sm=\"12\" md=\"8\" className=\"mt-1\">\n              <Slider className=\"owl-carousel owl-theme pricing-slider price-margin\">\n                <div className=\"item\">\n                  <div className=\"price-container shadows\">\n                    <div className=\"price-feature-container mb-3\">\n                      <Elements stripe={stripePromise}>\n                        <MyCom />\n                      </Elements>\n                    </div>\n                  </div>\n                </div>\n              </Slider>\n            </Col>\n          </Row>\n        </Container>\n        <FooterSection />\n      </section>\n    </>\n  );\n};\nexport default App;\n"],"mappings":"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","sourceRoot":""}