{"version":3,"file":"static/webpack/static/development/pages/layouts/category.js.d91e6dcf8c753a2cd650.hot-update.js","sources":["webpack:///./containers/portfolio/basic.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Input } from \"reactstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Link from \"next/link\";\nimport PaginationComp from \"../common/pagination\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Router from \"next/router\";\nimport Popup from \"../../containers/common/popup\";\nimport baseApiURL from \"../../constant/api\";\n\nconst Basic = ({\n  className,\n  title,\n  subTitle,\n  fluid,\n  categoryName,\n  getCategoryFullForm,\n}) => {\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const [tabUI, setTabUI] = useState([]);\n  const [rulesUI, setRulesUI] = useState([]);\n  var rulesData;\n  const [getSubCategory, setSubCategory] = useState([]);\n  const getSubCategories = (event) => {\n    axios({\n      method: \"get\",\n      url: baseApiURL + \"getSubCategories/all\",\n      headers: {\n        Authorization: \"token \" + \"5b9c4e6df7a17166a9528cc673956ce0ab9476c3\",\n      },\n    })\n      .then(function (response) {\n        if (response.data.status === 1) {\n          document.getElementById(\"subCategoriesSelect\").innerHTML =\n            \"<option value=0 selected>All</option>\";\n          for (var x in response.data.data) {\n            document.getElementById(\"subCategoriesSelect\").innerHTML +=\n              \"<option value=\" +\n              response.data.data[x].id +\n              \" id=\" +\n              response.data.data[x].id +\n              \">\" +\n              response.data.data[x].subCategory +\n              \"</option>\";\n          }\n          if (JSON.parse(localStorage.getItem(\"userInfo\")).plan === \"TR\") {\n            document.getElementById(\"subCategoriesSelect\").style.display =\n              \"none\";\n          }\n        } else {\n          toast.error(response.data.status);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  useEffect(getSubCategories, []);\n\n  const fetchIssues = () => {\n    if (localStorage.getItem(\"userInfo\")) {\n      if (\n        JSON.parse(localStorage.getItem(\"userInfo\")).plan !== \"\" &&\n        JSON.parse(localStorage.getItem(\"userInfo\")).plan\n      ) {\n        axios({\n          method: \"get\",\n          url:\n            baseApiURL +\n            \"issues_list/?category=\" +\n            categoryName +\n            \"&subCategory=\" +\n            document.getElementById(\"subCategoriesSelect\").value +\n            \"&hoarTemplatetoken=\" +\n            localStorage.getItem(\"hoarTemplatetoken\") +\n            \"&plan=\" +\n            JSON.parse(localStorage.getItem(\"userInfo\")).plan,\n        })\n          .then(function (response) {\n            setTabUI([]);\n            setRulesUI([]);\n            for (let i = 0; i < response.data.issueList.length; i++) {\n              setTabUI((tabUI) => [\n                ...tabUI,\n                <NavItem className=\"list-inline filter flex-column\">\n                  <NavLink\n                    id={\"tab_\" + response.data.issueList[i].id}\n                    name=\"parentTab\"\n                    className={\n                      activeTab == response.data.issueList[i].id.toString()\n                        ? \"active\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      setActiveTab(response.data.issueList[i].id.toString());\n                      var element = document.getElementsByName(\"parentTab\");\n                      for (var j = 0; j < element.length; j++) {\n                        if (element[j].classList.value.includes(\"active\")) {\n                          element[j].classList.remove(\"active\");\n                        }\n                      }\n                      document\n                        .getElementById(\"tab_\" + response.data.issueList[i].id)\n                        .classList.add(\"active\");\n                    }}\n                  >\n                    {response.data.issueList[i].title}\n                  </NavLink>\n                </NavItem>,\n              ]);\n              fetchRules(response.data.issueList[i].id);\n            }\n            axios({\n              method: \"get\",\n              url: baseApiURL + \"getSubCategories/\" + categoryName,\n              headers: {\n                Authorization:\n                  \"token \" + \"5b9c4e6df7a17166a9528cc673956ce0ab9476c3\",\n              },\n            })\n              .then(function (response) {\n                if (response.data.status === 1) {\n                  var selectedSubCat = document.getElementById(\n                    \"subCategoriesSelect\"\n                  ).value;\n                  document.getElementById(\"subCategoriesSelect\").innerHTML =\n                    \"<option value=0 selected>All</option>\";\n                  for (var x in response.data.data) {\n                    document.getElementById(\"subCategoriesSelect\").innerHTML +=\n                      \"<option value=\" +\n                      response.data.data[x].id +\n                      \" id=\" +\n                      response.data.data[x].id +\n                      \">\" +\n                      response.data.data[x].subCategory +\n                      \"</option>\";\n                  }\n\n                  if (selectedSubCat == \"\") {\n                    document.getElementById(\"subCategoriesSelect\").value = 0;\n                  } else {\n                    document.getElementById(\"subCategoriesSelect\").value =\n                      selectedSubCat;\n                  }\n                  if (\n                    JSON.parse(localStorage.getItem(\"userInfo\")).plan === \"TR\"\n                  ) {\n                    document.getElementById(\n                      \"subCategoriesSelect\"\n                    ).style.display = \"none\";\n                  }\n                } else {\n                  toast.error(response.data.status);\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        Router.push(\"/layouts/pricing\");\n      }\n    } else {\n      Router.push(\"/layouts/login\");\n    }\n  };\n  const addCustomRule = (id) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"issue_id\", id);\n    formData.append(\n      \"rule\",\n      document.getElementById(\"customRuleInput\" + id).value\n    );\n    formData.append(\n      \"hoarTemplatetoken\",\n      localStorage.getItem(\"hoarTemplatetoken\")\n    );\n    axios({\n      method: \"post\",\n      url: baseApiURL + \"rules/\",\n      data: formData,\n    })\n      .then(function (response) {\n        if (response.data.status === 1) {\n          toast.success(response.data.message);\n          setRulesUI([]);\n          fetchIssues();\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const fetchRules = (id) => {\n    axios({\n      method: \"get\",\n      url:\n        baseApiURL +\n        \"rules/?issue_id=\" +\n        id +\n        \"&hoarTemplatetoken=\" +\n        localStorage.getItem(\"hoarTemplatetoken\"),\n    })\n      .then(function (response) {\n        let ui = [];\n        var flag = 0;\n        rulesData = response;\n        if (response.data.issueNote !== \"\") {\n          ui.push(\n            <div className=\"d-flex flex-column mb-5\">\n              <h5\n                className=\"head-sub-text\"\n                style={{ color: \"white\", textTransform: \"none\" }}\n              >\n                {response.data.issueNote}\n              </h5>\n            </div>\n          );\n        }\n        ui.push(\n          <div className=\"d-flex flex-column \">\n            <Input className=\"\" type=\"checkbox\" id={\"notApp_\" + id} />\n            <label\n              for={\"notApp_\" + id}\n              className=\"head-sub-text\"\n              style={{ fontSize: \"20px\" }}\n            >\n              Not Applicable\n            </label>\n          </div>\n        );\n        for (let i = 0; i < response.data.ruleList.length; i++) {\n          if (response.data.ruleList[i].is_selected === 1) {\n            flag = 1;\n            ui.push(\n              <div\n                className=\"d-flex flex-column\"\n                id={\"ruleBox\" + response.data.ruleList[i].id}\n                style={{\n                  background: \"#f2403a\",\n                  borderRadius: 10,\n                  margin: \"14px 0px\",\n                }}\n              >\n                <Input\n                  type=\"checkbox\"\n                  className=\"\"\n                  name={\"rule-\" + response.data.ruleList[i].id}\n                  id={\"rule-\" + response.data.ruleList[i].id}\n                  onChange={() => addRules(event, id)}\n                  defaultChecked\n                />\n                <label\n                  for={\"rule-\" + response.data.ruleList[i].id}\n                  className=\"head-sub-text\"\n                  style={{ textTransform: \"none\", fontSize: \"20px\" }}\n                >\n                  {response.data.ruleList[i].rule}\n                  {response.data.ruleList[i].is_new == true ? (\n                    <span\n                      className=\"ml-2\"\n                      style={{\n                        color: \"white\",\n                        background: \"#ed6f64\",\n                        paddingLeft: 5,\n                        paddingRight: 5,\n                        paddingTop: 3,\n                        paddingBottom: 3,\n                        borderRadius: 10,\n                      }}\n                    >\n                      New\n                    </span>\n                  ) : null}\n                </label>\n              </div>\n            );\n          } else {\n            ui.push(\n              <div\n                className=\"d-flex flex-column \"\n                id={\"ruleBox\" + response.data.ruleList[i].id}\n              >\n                <Input\n                  className=\"\"\n                  name={\"rule-\" + response.data.ruleList[i].id}\n                  id={\"rule-\" + response.data.ruleList[i].id}\n                  onChange={() => addRules(event, id)}\n                  type=\"checkbox\"\n                />\n                <label\n                  for={\"rule-\" + response.data.ruleList[i].id}\n                  className=\"head-sub-text\"\n                  style={{ textTransform: \"none\", fontSize: \"20px\" }}\n                >\n                  {response.data.ruleList[i].rule}\n                  {response.data.ruleList[i].is_new == true ? (\n                    <span\n                      className=\"ml-2\"\n                      style={{\n                        color: \"white\",\n                        background: \"#ed6f64\",\n                        paddingLeft: 5,\n                        paddingRight: 5,\n                        paddingTop: 3,\n                        paddingBottom: 3,\n                        borderRadius: 10,\n                      }}\n                    >\n                      New\n                    </span>\n                  ) : null}\n                </label>\n              </div>\n            );\n          }\n        }\n        ui.push(\n          <div className=\"d-flex\">\n            <form onSubmit={() => addCustomRule(id)} className=\"d-flex\">\n              <Input\n                id={\"customRuleInput\" + id}\n                className=\"mt-2\"\n                type=\"text\"\n                name={\"rule\" + id}\n                placeholder=\"Enter Rule\"\n              />\n              <Input\n                type=\"submit\"\n                id={\"submitCustom\" + id}\n                className=\"d-none\"\n              />\n              <button\n                type=\"submit\"\n                style={{ alignSelf: \"center\" }}\n                className=\"btn btn-link\"\n              >\n                <img\n                  alt=\"Add\"\n                  className=\"img-fluid\"\n                  src=\"/assets/images/add.png\"\n                  style={{\n                    height: 20,\n                    width: 20,\n                    alignSelf: \"center\",\n                    marginLeft: 10,\n                  }}\n                />\n              </button>\n            </form>\n          </div>\n        );\n        // ui.push(\n        //   <div className=\"link-horizontal mt-5\">\n        //     <a\n        //       className=\"btn btn-default btn-gradient text-white active\"\n        //       href=\"/layouts/savedRules\"\n        //     >\n        //       View Saved Rules\n        //     </a>\n        //   </div>\n        // );\n        setRulesUI((rulesUI) => [\n          ...rulesUI,\n          <TabPane tabId={id.toString()}>{ui}</TabPane>,\n        ]);\n        if (flag === 1) {\n          document.getElementById(\"notApp_\" + id).checked = false;\n        } else {\n          document.getElementById(\"notApp_\" + id).checked = true;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const addRules = (event, id) => {\n    event.preventDefault();\n    if (document.getElementById(\"notApp_\" + id).checked) {\n      document.getElementById(\"notApp_\" + id).checked = false;\n    }\n\n    const formData = new FormData();\n    formData.append(\"ruleId\", event.target.id);\n    formData.append(\n      \"hoarTemplatetoken\",\n      localStorage.getItem(\"hoarTemplatetoken\")\n    );\n    axios({\n      method: \"post\",\n      url: baseApiURL + \"user_selected/\",\n      data: formData,\n    })\n      .then(function (response) {\n        if (response.data.status === 1) {\n          if (document.getElementById(event.target.id).checked) {\n            document.getElementById(event.target.id).checked = false;\n            document.getElementById(\n              \"rule-\" + response.data.data[k].id.toString()\n            ).style.background = none;\n          } else {\n            document.getElementById(event.target.id).checked = true;\n            for (var k in response.data.data) {\n              if (\n                document.getElementById(\n                  \"rule-\" + response.data.data[k].id.toString()\n                ).checked === true\n              ) {\n                document.getElementById(\n                  \"ruleBox\" + response.data.data[k].id.toString()\n                ).style.background = \"red\";\n                document.getElementById(\n                  \"ruleBox\" + event.target.id\n                ).style.background = \"red\";\n              }\n            }\n          }\n        } else {\n          toast.error(response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  useEffect(fetchIssues, [categoryName]);\n\n  return (\n    <Fragment>\n      <p\n        style={{\n          fontSize: \"65px\",\n          padding: \"5px 38px\",\n          color: \"white !important\",\n          lineHeight: \"75px\",\n          marginBottom: \"60px\",\n        }}\n      >\n        {getCategoryFullForm}\n      </p>\n      <section className=\"scrollbar portfolio-section fullwidth-portfolio masonray-sec zoom-gallery titles schedule\">\n        <div className=\"filter-section\">\n          <Container fluid={true}>\n            <Row>\n              <Col\n                md=\"2\"\n                style={{\n                  paddingLeft: \"40px\",\n                  marginBottom: \"50px\",\n                  flex: \"0 0 27%\",\n                }}\n              >\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"-10px\",\n                    color: \"#fff\",\n                    fontSize: \"35px\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  Categories:{\" \"}\n                </span>{\" \"}\n                <input type=\"hidden\" value=\"\" name=\"category\" />\n                <Input\n                  type=\"select\"\n                  name=\"subCategory\"\n                  id=\"subCategoriesSelect\"\n                  onChange={fetchIssues}\n                ></Input>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"55px\",\n                    color: \"#fff\",\n                    fontSize: \"35px\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  Rule Topics:{\" \"}\n                </span>{\" \"}\n              </Col>\n            </Row>\n            <Row className=\"mt-4\" style={{ flexWrap: \"nowrap\" }}>\n              <Col md=\"4\" xs=\"12\" className=\"\">\n                <Nav\n                  tabs\n                  className=\"filter-container isotopeFilters d-flex align-items-start flex-column\"\n                  style={{ height: \"auto\" }}\n                >\n                  {tabUI}\n                </Nav>\n                <Popup />\n                {/* <div className=\"my-4 justify-content-start\">\n                  <PaginationComp />\n                </div> */}\n              </Col>\n              <Col md=\"7\" xs=\"12\">\n                <div className={fluid || \"container\"}>\n                  <TabContent\n                    className=\"isotopeContainer row\"\n                    activeTab={activeTab}\n                    style={{ height: \"auto\" }}\n                  >\n                    {rulesUI}\n                  </TabContent>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Basic;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAaA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AA4BA;AAhCA;AACA;AAEA;AAAA;AA8BA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAHA;AASA;AACA;AAGA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AASA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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","sourceRoot":""}